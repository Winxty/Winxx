-- Not obfuscated yet

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

local executor = identifyexecutor()

    if not executor then
        game.Players.LocalPlayer:Kick("Sypherion is not supported in this executor yet")
    end

if SYPHERION == true then
    warn("Sypherion is already running on: " .. executor)
    return
end

Rep = cloneref(game:GetService("ReplicatedStorage"))
Players = cloneref(game:GetService("Players"))


pcall(function() getgenv().SYPHERION = true end)



local function Notify(Title, Text, Duration)
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = Title,
            Text = Text,
            Duration = Duration,
        })
    end)
end


        local letters = {
            "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
            "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z",
            "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
            "!", "\"", "#", "$", "%", "&", "'", "(", ")", "*", "+", ",", "-", ".", "/", ":", ";", "<", "=", ">", "?", "@", "[", "\\", "]", "^", "_", "`", "{", "|", "}", "~"
        }




local display = game.Players.LocalPlayer.DisplayName


Notify("Sypherion", "Welcome " .. display, 4)
Notify("Type .cmds in chat for commands", "", 4)

--commands

local players = game:GetService("Players")
local runservice = game:GetService("RunService")
local tweenService = game:GetService("TweenService")
local localPlayer = players.LocalPlayer

-- Create the UI only if it doesn't exist, now using CoreGui
local screenGui = game:GetService("CoreGui"):FindFirstChild("CommandUI")
if not screenGui then
    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CommandUI"
    screenGui.Parent = game:GetService("CoreGui")
end

local commandBox = Instance.new("TextBox")
commandBox.Parent = screenGui
commandBox.Size = UDim2.new(0, 300, 0, 50)
commandBox.Position = UDim2.new(0.5, -150, 0.9, 0)  -- Centered bottom
commandBox.PlaceholderText = "Enter Command..."
commandBox.Text = ""
commandBox.ClearTextOnFocus = false
commandBox.BackgroundColor3 = Color3.new(0, 0, 0)
commandBox.TextColor3 = Color3.new(1, 1, 1)
commandBox.TextScaled = true

local players = game:GetService("Players")

local function findPlayersByPartialName(name)
    local matches = {}
    name = name:lower()
    

    for _, player in ipairs(players:GetPlayers()) do
        if player.Name:lower():find(name) or player.DisplayName:lower():find(name) then
            table.insert(matches, player)
        end
    end
    

    return matches
end


commandBox.FocusLost:Connect(function(enterPressed)
    if not enterPressed then return end  -- Only run if player presses Enter

    local text = commandBox.Text
    commandBox.Text = ""  -- Clear after running command
    local args = text:split(" ")
    local cmd = args[1]:lower()

    -- List of Commands
    if cmd == "cmds" then
        print("goto [player] teleports you to the player")
        print("tweengoto / tgoto [player] tweens you to the player")
        print("re / reset resets your character")
        print("walkspeed / ws / speed sets your walkspeed")
        print("status sends status")
        print("debug sends advanced status in console")
        print("notify / timer sends a timer on the chosen settings")
        print("test sends a test msg")
        Notify("Check console", "", 4)
    end

    -- Travel Commands
    if cmd == "goto" then
        if args[2] then
            local targetPart = args[2]:lower()
            for _, targetPlayer in pairs(players:GetPlayers()) do
                local usernameMatch = targetPlayer.Name:lower():sub(1, #targetPart) == targetPart
                local displayNameMatch = targetPlayer.DisplayName:lower():sub(1, #targetPart) == targetPart
                if usernameMatch or displayNameMatch then
                    if targetPlayer.Character then
                        local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                        if targetRoot then
                            localPlayer.Character:SetPrimaryPartCFrame(targetRoot.CFrame + Vector3.new(0, 5, 0))
                            return
                        end
                    end
                end
            end
        end
    end

    -- Tweengoto Command
    if cmd == "tweengoto" or cmd == "tgoto" then
        if args[2] then
            local targetPart = args[2]:lower()
            for _, targetPlayer in pairs(players:GetPlayers()) do
                local usernameMatch = targetPlayer.Name:lower():sub(1, #targetPart) == targetPart
                local displayNameMatch = targetPlayer.DisplayName:lower():sub(1, #targetPart) == targetPart
                if usernameMatch or displayNameMatch then
                    if targetPlayer.Character then
                        local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                        if targetRoot then
                            local startPos = localPlayer.Character.HumanoidRootPart.Position
                            local targetPos = targetRoot.Position + Vector3.new(0, 5, 0)
                            local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
                            local tweenGoal = {CFrame = CFrame.new(targetPos)}
                            local tween = tweenService:Create(localPlayer.Character.HumanoidRootPart, tweenInfo, tweenGoal)
                            tween:Play()
                            tween.Completed:Wait()
                            return
                        end
                    end
                end
            end
        end
    end


    if cmd == "re" or cmd == "reset" then
        local lastpos = localPlayer.Character.HumanoidRootPart.CFrame.Position
        localPlayer.Character:BreakJoints()
        wait(players.RespawnTime)
        if localPlayer.Character.HumanoidRootPart then
            localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(lastpos)
        end
    end


    if cmd == "walkspeed" or cmd == "ws" or cmd == "speed" then
        local walkspeed = tonumber(args[2])
        if not walkspeed then
            walkspeed = 16
        end
        if localPlayer.Character and localPlayer.Character:FindFirstChild("Humanoid") then
            localPlayer.Character.Humanoid.WalkSpeed = walkspeed
        end
    end



    if cmd == "notify" or cmd == "timer" then
        local Title = args[2]
        local Text = args[3]
        local waitTime = tonumber(args[4]) or 5
        wait(waitTime)
        pcall(function()
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = Title,
                Text = Text,
                Duration = 10,
            })
        end)
    end


    if cmd == "status" then
        Notify("Sypherion", "Sypherion is loaded", 5)
        Notify("Sypherion", "If you think any commands are bugged do .debug", 5)
    end


    if cmd == "debug" then
        Notify("Sypherion", "Debug info not fixed yet", 5)
    end


    if cmd == "test" then
        Notify("Test", "", 3)
    end

    if cmd == "sit" then
        players.LocalPlayer.Character.Humanoid.Sit = true
    end

    if cmd == "touch" then
        local targetFind = args[2]
    
        local run = game:GetService("RunService")
    

        local matches = findPlayersByPartialName(targetFind)
    

        if #matches > 0 then

            local target = matches[1]
            
            if target.Character then
                local targetHumanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
                local myHumanoidRootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            
                if targetHumanoidRootPart and myHumanoidRootPart then

                    local targetPosition = targetHumanoidRootPart.Position
                    local directionBehind = (targetHumanoidRootPart.CFrame.LookVector * -0.8)
                    local newPosition = targetPosition + directionBehind

                    myHumanoidRootPart.CFrame = CFrame.new(newPosition)
                end
            end
        else
            print("No player found matching: " .. targetFind)
        end
    end

    if cmd == "jump" then
        game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping)
    end
    
    
    
    

end)
